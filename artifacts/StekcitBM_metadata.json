{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "router",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "EmptyArgs",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmptySecrets",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmptySource",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NoInlineSecrets",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OnlyRouterCanFulfill",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"name": "UnexpectedRequestID",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "RequestFulfilled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "numWords",
						"type": "uint32"
					}
				],
				"name": "RequestSent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "RequestSent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "response",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "err",
						"type": "bytes"
					}
				],
				"name": "Response",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allRandomWords",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allStekcitTickets",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allStekcitUsers",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "walletAddress",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "username",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "email",
						"type": "string"
					}
				],
				"name": "createStekcitUser",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "getRequestStatus",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "paid",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "fulfilled",
						"type": "bool"
					},
					{
						"internalType": "uint256[]",
						"name": "randomWords",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "response",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "err",
						"type": "bytes"
					}
				],
				"name": "handleOracleFulfillment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastRequestId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "purchaseStekcitTicket",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_randomWords",
						"type": "uint256[]"
					}
				],
				"name": "rawFulfillRandomWords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "requestIds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "requestRandomWords",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "s_lastError",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "s_lastRequestId",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "s_lastResponse",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "s_requests",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "paid",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "fulfilled",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "source",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "encryptedSecretsUrls",
						"type": "bytes"
					},
					{
						"internalType": "uint8",
						"name": "donHostedSecretsSlotID",
						"type": "uint8"
					},
					{
						"internalType": "uint64",
						"name": "donHostedSecretsVersion",
						"type": "uint64"
					},
					{
						"internalType": "string[]",
						"name": "args",
						"type": "string[]"
					},
					{
						"internalType": "bytes[]",
						"name": "bytesArgs",
						"type": "bytes[]"
					},
					{
						"internalType": "uint64",
						"name": "subscriptionId",
						"type": "uint64"
					},
					{
						"internalType": "uint32",
						"name": "gasLimit",
						"type": "uint32"
					},
					{
						"internalType": "bytes32",
						"name": "donID",
						"type": "bytes32"
					}
				],
				"name": "sendRequest",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "request",
						"type": "bytes"
					},
					{
						"internalType": "uint64",
						"name": "subscriptionId",
						"type": "uint64"
					},
					{
						"internalType": "uint32",
						"name": "gasLimit",
						"type": "uint32"
					},
					{
						"internalType": "bytes32",
						"name": "donID",
						"type": "bytes32"
					}
				],
				"name": "sendRequestCBOR",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawLink",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"handleOracleFulfillment(bytes32,bytes,bytes)": {
					"details": "Either response or error parameter will be set, but never both.",
					"params": {
						"err": "Aggregated error either from the request's source code or from the execution pipeline.",
						"requestId": "The requestId returned by FunctionsClient.sendRequest().",
						"response": "Aggregated response from the request's source code."
					}
				},
				"sendRequestCBOR(bytes,uint64,uint32,bytes32)": {
					"params": {
						"donID": "ID of the job to be invoked",
						"gasLimit": "The maximum amount of gas the request can consume",
						"request": "CBOR-encoded request data",
						"subscriptionId": "Billing ID"
					},
					"returns": {
						"requestId": "The ID of the sent request"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"handleOracleFulfillment(bytes32,bytes,bytes)": {
					"notice": "Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round."
				},
				"sendRequestCBOR(bytes,uint64,uint32,bytes32)": {
					"notice": "Send a pre-encoded CBOR request"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"StekcitBM.sol": "StekcitBM"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts@1.1.0/src/v0.8/functions/v1_0_0/FunctionsClient.sol": {
			"keccak256": "0x40224641403cb9fa03d4f060296d7420a9ff11b46abadc958ae048459205e397",
			"license": "MIT",
			"urls": [
				"bzz-raw://7d1dabc1ca292b93c373589b1827f01b404d0d66669f58c03b6d2f92a6e64f2c",
				"dweb:/ipfs/QmP3yzaUfqUqb7qk4fBYw8U6rMgWsSgNKjSUGJncjwaHCq"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol": {
			"keccak256": "0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff",
			"license": "MIT",
			"urls": [
				"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3",
				"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol": {
			"keccak256": "0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08",
			"license": "MIT",
			"urls": [
				"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6",
				"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol": {
			"keccak256": "0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d",
				"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol": {
			"keccak256": "0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b",
			"license": "MIT",
			"urls": [
				"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b",
				"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
			"keccak256": "0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51",
			"license": "MIT",
			"urls": [
				"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845",
				"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol": {
			"keccak256": "0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8",
				"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol": {
			"keccak256": "0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715",
			"license": "MIT",
			"urls": [
				"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd",
				"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol": {
			"keccak256": "0x97bc383acc97074b3b7d6f68da70dce617699f54e0ed1ddd0c83ec7f83a4f07f",
			"license": "MIT",
			"urls": [
				"bzz-raw://09edfa8dc11decff67ccde43ccd803ed3cd3b9f020c69f2a4c5394591cd9b39f",
				"dweb:/ipfs/QmUxFtDpXkYYQ6S2jDrnu9Md6F1guH4S14p5jt7pTDYUgv"
			]
		},
		"@chainlink/contracts@1.1.0/src/v0.8/vrf/interfaces/VRFV2WrapperInterface.sol": {
			"keccak256": "0x44f6fa0cb1867a0bc137a195d4603bafa1cf74ecfbe69eb82a5dabeca8957738",
			"license": "MIT",
			"urls": [
				"bzz-raw://87ebb29c09566ab02ff62c3c29f60a08db52f032b5f2c5220cd111aad88002ce",
				"dweb:/ipfs/QmfScq3oJ6MkPXJh5JUrpz93bNMJ3ebtLcE3Q1H2DUNi93"
			]
		},
		"StekcitBM.sol": {
			"keccak256": "0x1b3d8da8a28a9021e910676012268b7acd69936a34d67fdb75c0cbd2392c5e44",
			"license": "MIT",
			"urls": [
				"bzz-raw://b79bc8bdc0443ee83369b364d9df7af875eeb13a45676971f1b07252a1c5af60",
				"dweb:/ipfs/QmPjt5UvjkWvk3BK1StwVCUxKxYbspwiodngQ79ULGgryN"
			]
		}
	},
	"version": 1
}